import numpy as np
import matplotlib.pyplot as plt
from sklearn.preprocessing import Polynomial Features 
from sklearn.linear_model import LinearRegression

# Generate sample data 
np.random.seed(0)
X=np.sort(5* np.random.rand(80,1),axis=0)
y=np.sin(X).ravel()+np.random. rand(80)

# Fit a polynomial regression model 
degree= 3 # You can change the degree as needed
poly_features = Polynomial Features(degree=degree)
X_poly = poly_features.fit_transform(X)
model = LinearRegression()
model.fit(X_poly, y)

# Predict values using the model
X_test = np.linspace(0, 5, 100)[:, np.newaxis]
X_test_poly = poly_features.transform(X_test)
Y\ pred=model.pre dict (X_test_poly)

# Plot the results
lt. scatter (X,y,color='blue',label='Data')
plt.plot(X_test, y_pred, color='red', label='Polynomial Regression')
plt.xlabel('X')
plt.ylabel('y')
plt.legend()
plt.title(f'Polynomial Regression (Degree {degree})')
plt.show()